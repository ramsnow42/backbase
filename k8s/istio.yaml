apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: nginx-gateway
  namespace: prod
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: nginx-virtualservice
  namespace: prod
spec:
  hosts:
  - "*"
  gateways:
  - nginx-gateway
  http:
  - match:
    - uri:
        prefix: "/nginx-service"
    rewrite:
      uri: "/"
    route:
    - destination:
        host: nginx-service.prod.svc.cluster.local
        port:
          number: 80


---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: nginx-destination
  namespace: prod
spec:
  host: nginx-service.prod.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: custom-nginx-vs
  namespace: prod
spec:
  hosts:
  - "*"  # Matches all incoming requests
  gateways:
  - nginx-gateway  # This references your existing ingress gateway
  http:
  - match:
    - uri:
        exact: /  # Matches requests with the path '/'
    rewrite:
      uri: "/"  # Rewrites the path to '/'
    route:
    - destination:
        host: custom-nginx-service.prod.svc.cluster.local  # Your service
        port:
          number: 80


---

apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: custom-nginx-dr
  namespace: prod
spec:
  host: custom-nginx-service.prod.svc.cluster.local  # The service hostname
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN  # Load balancing strategy (you can choose others like LEAST_CONN, etc.)




